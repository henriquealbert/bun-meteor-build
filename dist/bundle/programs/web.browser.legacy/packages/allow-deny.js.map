{"version":3,"sources":["meteor://ðŸ’»app/packages/allow-deny/allow-deny.js"],"names":["_objectSpread","module","link","default","v","_regeneratorRuntime","hasOwn","Object","prototype","hasOwnProperty","AllowDeny","CollectionPrototype","allow","options","addValidator","deny","_defineMutationMethods","self","_restricted","_insecure","undefined","_validators","insert","update","remove","insertAsync","updateAsync","removeAsync","upsertAsync","fetch","fetchAllFields","_name","_prefix","_connection","Meteor","server","isClient","m","forEach","method","methodName","useExisting","handlerPropName","isInsert","name","includes","check","arguments","Match","Any","args","Array","from","generatedId","call","_makeNewID","isSimulation","_id","_collection","apply","throwIfSelectorIsNotId","length","Error","validatedMethodName","charAt","toUpperCase","slice","unshift","userId","push","_isInsecure","e","toString","methods","_updateFetch","fields","union","create","add","names","keys","Package","insecure","_validatedInsertAsync","doc","some","validator","docToValidate","every","_validatedInsert","isServer","_validatedUpdateAsync","_callee","selector","mutator","noReplaceError","mutatorKeys","modifiedFields","findOptions","async","_callee$","_context","prev","next","assign","LocalCollection","_selectorIsIdPerhapsAsObject","upsert","op","params","ALLOWED_UPDATE_OPERATIONS","field","indexOf","substring","transform","fieldName","awrap","findOneAsync","sent","abrupt","factoriedDoc","transformDoc","_forbidReplace","stop","Promise","_validatedUpdate","findOne","$inc","$set","$unset","$addToSet","$pop","$pullAll","$pull","$pushAll","$push","$bit","_validatedRemoveAsync","_callee2","_callee2$","_context2","_validatedRemove","_callMutatorMethodAsync","firstArgIsSelector","mutatorMethodName","_args3","_callMutatorMethodAsync$","_context3","alreadyInSimulation","applyAsync","returnStubValue","returnServerResultPromise","_callMutatorMethod","callback","err","_debug","ret","EJSON","clone","collection","allowOrDeny","validKeysRegEx","key","test","Function","_transform","wrapTransform","CurrentInvocation","DDP","_CurrentMethodInvocation","_CurrentInvocation","enclosing","get"],"mappings":"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","file":"/packages/allow-deny.js","sourcesContent":["///\n/// Remote methods and access control.\n///\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// Restrict default mutators on collection. allow() and deny() take the\n// same options:\n//\n// options.insertAsync {Function(userId, doc)}\n//   return true to allow/deny adding this document\n//\n// options.updateAsync {Function(userId, docs, fields, modifier)}\n//   return true to allow/deny updating these documents.\n//   `fields` is passed as an array of fields that are to be modified\n//\n// options.removeAsync {Function(userId, docs)}\n//   return true to allow/deny removing these documents\n//\n// options.fetch {Array}\n//   Fields to fetch for these validators. If any call to allow or deny\n//   does not have this option then all fields are loaded.\n//\n// allow and deny can be called multiple times. The validators are\n// evaluated as follows:\n// - If neither deny() nor allow() has been called on the collection,\n//   then the request is allowed if and only if the \"insecure\" smart\n//   package is in use.\n// - Otherwise, if any deny() function returns true, the request is denied.\n// - Otherwise, if any allow() function returns true, the request is allowed.\n// - Otherwise, the request is denied.\n//\n// Meteor may call your deny() and allow() functions in any order, and may not\n// call all of them if it is able to make a decision without calling them all\n// (so don't include side effects).\n\nAllowDeny = {\n  CollectionPrototype: {}\n};\n\n// In the `mongo` package, we will extend Mongo.Collection.prototype with these\n// methods\nconst CollectionPrototype = AllowDeny.CollectionPrototype;\n\n/**\n * @summary Allow users to write directly to this collection from client code, subject to limitations you define.\n * @locus Server\n * @method allow\n * @memberOf Mongo.Collection\n * @instance\n * @param {Object} options\n * @param {Function} options.insertAsync,updateAsync,removeAsync Functions that look at a proposed modification to the database and return true if it should be allowed.\n * @param {String[]} options.fetch Optional performance enhancement. Limits the fields that will be fetched from the database for inspection by your `update` and `remove` functions.\n * @param {Function} options.transform Overrides `transform` on the  [`Collection`](#collections).  Pass `null` to disable transformation.\n */\nCollectionPrototype.allow = function(options) {\n  addValidator(this, 'allow', options);\n};\n\n/**\n * @summary Override `allow` rules.\n * @locus Server\n * @method deny\n * @memberOf Mongo.Collection\n * @instance\n * @param {Object} options\n * @param {Function} options.insertAsync,updateAsync,removeAsync Functions that look at a proposed modification to the database and return true if it should be denied, even if an [allow](#allow) rule says otherwise.\n * @param {String[]} options.fetch Optional performance enhancement. Limits the fields that will be fetched from the database for inspection by your `update` and `remove` functions.\n * @param {Function} options.transform Overrides `transform` on the  [`Collection`](#collections).  Pass `null` to disable transformation.\n */\nCollectionPrototype.deny = function(options) {\n  addValidator(this, 'deny', options);\n};\n\nCollectionPrototype._defineMutationMethods = function(options) {\n  const self = this;\n  options = options || {};\n\n  // set to true once we call any allow or deny methods. If true, use\n  // allow/deny semantics. If false, use insecure mode semantics.\n  self._restricted = false;\n\n  // Insecure mode (default to allowing writes). Defaults to 'undefined' which\n  // means insecure iff the insecure package is loaded. This property can be\n  // overriden by tests or packages wishing to change insecure mode behavior of\n  // their collections.\n  self._insecure = undefined;\n\n  self._validators = {\n    insert: {allow: [], deny: []},\n    update: {allow: [], deny: []},\n    remove: {allow: [], deny: []},\n    insertAsync: {allow: [], deny: []},\n    updateAsync: {allow: [], deny: []},\n    removeAsync: {allow: [], deny: []},\n    upsertAsync: {allow: [], deny: []}, // dummy arrays; can't set these!\n    fetch: [],\n    fetchAllFields: false\n  };\n\n  if (!self._name)\n    return; // anonymous collection\n\n  // XXX Think about method namespacing. Maybe methods should be\n  // \"Meteor:Mongo:insertAsync/NAME\"?\n  self._prefix = '/' + self._name + '/';\n\n  // Mutation Methods\n  // Minimongo on the server gets no stubs; instead, by default\n  // it wait()s until its result is ready, yielding.\n  // This matches the behavior of macromongo on the server better.\n  // XXX see #MeteorServerNull\n  if (self._connection && (self._connection === Meteor.server || Meteor.isClient)) {\n    const m = {};\n\n    [\n      'insertAsync',\n      'updateAsync',\n      'removeAsync',\n      'insert',\n      'update',\n      'remove',\n    ].forEach(method => {\n      const methodName = self._prefix + method;\n\n      if (options.useExisting) {\n        const handlerPropName = Meteor.isClient\n          ? '_methodHandlers'\n          : 'method_handlers';\n        // Do not try to create additional methods if this has already been called.\n        // (Otherwise the .methods() call below will throw an error.)\n        if (\n          self._connection[handlerPropName] &&\n          typeof self._connection[handlerPropName][methodName] === 'function'\n        )\n          return;\n      }\n\n      const isInsert = name => name.includes('insert');\n\n      m[methodName] = function (/* ... */) {\n        // All the methods do their own validation, instead of using check().\n        check(arguments, [Match.Any]);\n        const args = Array.from(arguments);\n        try {\n          // For an insert/insertAsync, if the client didn't specify an _id, generate one\n          // now; because this uses DDP.randomStream, it will be consistent with\n          // what the client generated. We generate it now rather than later so\n          // that if (eg) an allow/deny rule does an insert/insertAsync to the same\n          // collection (not that it really should), the generated _id will\n          // still be the first use of the stream and will be consistent.\n          //\n          // However, we don't actually stick the _id onto the document yet,\n          // because we want allow/deny rules to be able to differentiate\n          // between arbitrary client-specified _id fields and merely\n          // client-controlled-via-randomSeed fields.\n          let generatedId = null;\n          if (isInsert(method) && !hasOwn.call(args[0], '_id')) {\n            generatedId = self._makeNewID();\n          }\n\n          if (this.isSimulation) {\n            // In a client simulation, you can do any mutation (even with a\n            // complex selector).\n            if (generatedId !== null) {\n              args[0]._id = generatedId;\n            }\n            return self._collection[method].apply(self._collection, args);\n          }\n\n          // This is the server receiving a method call from the client.\n\n          // We don't allow arbitrary selectors in mutations from the client: only\n          // single-ID selectors.\n          if (!isInsert(method)) throwIfSelectorIsNotId(args[0], method);\n\n          if (self._restricted) {\n            // short circuit if there is no way it will pass.\n            if (self._validators[method].allow.length === 0) {\n              throw new Meteor.Error(\n                403,\n                'Access denied. No allow validators set on restricted ' +\n                  \"collection for method '\" +\n                  method +\n                  \"'.\"\n              );\n            }\n\n            const validatedMethodName =\n                  '_validated' + method.charAt(0).toUpperCase() + method.slice(1);\n            args.unshift(this.userId);\n            isInsert(method) && args.push(generatedId);\n            return self[validatedMethodName].apply(self, args);\n          } else if (self._isInsecure()) {\n            if (generatedId !== null) args[0]._id = generatedId;\n            // In insecure mode, allow any mutation (with a simple selector).\n            // XXX This is kind of bogus.  Instead of blindly passing whatever\n            //     we get from the network to this function, we should actually\n            //     know the correct arguments for the function and pass just\n            //     them.  For example, if you have an extraneous extra null\n            //     argument and this is Mongo on the server, the .wrapAsync'd\n            //     functions like update will get confused and pass the\n            //     \"fut.resolver()\" in the wrong slot, where _update will never\n            //     invoke it. Bam, broken DDP connection.  Probably should just\n            //     take this whole method and write it three times, invoking\n            //     helpers for the common code.\n            return self._collection[method].apply(self._collection, args);\n          } else {\n            // In secure mode, if we haven't called allow or deny, then nothing\n            // is permitted.\n            throw new Meteor.Error(403, 'Access denied');\n          }\n        } catch (e) {\n          if (\n            e.name === 'MongoError' ||\n            // for old versions of MongoDB (probably not necessary but it's here just in case)\n            e.name === 'BulkWriteError' ||\n            // for newer versions of MongoDB (https://docs.mongodb.com/drivers/node/current/whats-new/#bulkwriteerror---mongobulkwriteerror)\n            e.name === 'MongoBulkWriteError' ||\n            e.name === 'MinimongoError'\n          ) {\n            throw new Meteor.Error(409, e.toString());\n          } else {\n            throw e;\n          }\n        }\n      };\n    });\n\n    self._connection.methods(m);\n  }\n};\n\nCollectionPrototype._updateFetch = function (fields) {\n  const self = this;\n\n  if (!self._validators.fetchAllFields) {\n    if (fields) {\n      const union = Object.create(null);\n      const add = names => names && names.forEach(name => union[name] = 1);\n      add(self._validators.fetch);\n      add(fields);\n      self._validators.fetch = Object.keys(union);\n    } else {\n      self._validators.fetchAllFields = true;\n      // clear fetch just to make sure we don't accidentally read it\n      self._validators.fetch = null;\n    }\n  }\n};\n\nCollectionPrototype._isInsecure = function () {\n  const self = this;\n  if (self._insecure === undefined)\n    return !!Package.insecure;\n  return self._insecure;\n};\n\nCollectionPrototype._validatedInsertAsync = function (userId, doc,\n                                                         generatedId) {\n  const self = this;\n\n  // call user validators.\n  // Any deny returns true means denied.\n  if (self._validators.insertAsync.deny.some((validator) => {\n    return validator(userId, docToValidate(validator, doc, generatedId));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n  // Any allow returns true means proceed. Throw error if they all fail.\n\n  if (self._validators.insertAsync.allow.every((validator) => {\n    return !validator(userId, docToValidate(validator, doc, generatedId));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n\n  // If we generated an ID above, insertAsync it now: after the validation, but\n  // before actually inserting.\n  if (generatedId !== null)\n    doc._id = generatedId;\n\n  return self._collection.insertAsync.call(self._collection, doc);\n};\n\nCollectionPrototype._validatedInsert = function (userId, doc,\n                                                         generatedId) {\n  const self = this;\n\n  // call user validators.\n  // Any deny returns true means denied.\n  if (self._validators.insert.deny.some((validator) => {\n    return validator(userId, docToValidate(validator, doc, generatedId));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n  // Any allow returns true means proceed. Throw error if they all fail.\n\n  if (self._validators.insert.allow.every((validator) => {\n    return !validator(userId, docToValidate(validator, doc, generatedId));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n\n  // If we generated an ID above, insert it now: after the validation, but\n  // before actually inserting.\n  if (generatedId !== null)\n    doc._id = generatedId;\n\n  return (Meteor.isServer\n    ? self._collection.insertAsync\n    : self._collection.insert\n  ).call(self._collection, doc);\n};\n\n// Simulate a mongo `update` operation while validating that the access\n// control rules set by calls to `allow/deny` are satisfied. If all\n// pass, rewrite the mongo operation to use $in to set the list of\n// document ids to change ##ValidatedChange\nCollectionPrototype._validatedUpdateAsync = async function(\n    userId, selector, mutator, options) {\n  const self = this;\n\n  check(mutator, Object);\n\n  options = Object.assign(Object.create(null), options);\n\n  if (!LocalCollection._selectorIsIdPerhapsAsObject(selector))\n    throw new Error(\"validated update should be of a single ID\");\n\n  // We don't support upserts because they don't fit nicely into allow/deny\n  // rules.\n  if (options.upsert)\n    throw new Meteor.Error(403, \"Access denied. Upserts not \" +\n                           \"allowed in a restricted collection.\");\n\n  const noReplaceError = \"Access denied. In a restricted collection you can only\" +\n        \" update documents, not replace them. Use a Mongo update operator, such \" +\n        \"as '$set'.\";\n\n  const mutatorKeys = Object.keys(mutator);\n\n  // compute modified fields\n  const modifiedFields = {};\n\n  if (mutatorKeys.length === 0) {\n    throw new Meteor.Error(403, noReplaceError);\n  }\n  mutatorKeys.forEach((op) => {\n    const params = mutator[op];\n    if (op.charAt(0) !== '$') {\n      throw new Meteor.Error(403, noReplaceError);\n    } else if (!hasOwn.call(ALLOWED_UPDATE_OPERATIONS, op)) {\n      throw new Meteor.Error(\n        403, \"Access denied. Operator \" + op + \" not allowed in a restricted collection.\");\n    } else {\n      Object.keys(params).forEach((field) => {\n        // treat dotted fields as if they are replacing their\n        // top-level part\n        if (field.indexOf('.') !== -1)\n          field = field.substring(0, field.indexOf('.'));\n\n        // record the field we are trying to change\n        modifiedFields[field] = true;\n      });\n    }\n  });\n\n  const fields = Object.keys(modifiedFields);\n\n  const findOptions = {transform: null};\n  if (!self._validators.fetchAllFields) {\n    findOptions.fields = {};\n    self._validators.fetch.forEach((fieldName) => {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n\n  const doc = await self._collection.findOneAsync(selector, findOptions);\n  if (!doc)  // none satisfied!\n    return 0;\n\n  // call user validators.\n  // Any deny returns true means denied.\n  if (self._validators.updateAsync.deny.some((validator) => {\n    const factoriedDoc = transformDoc(validator, doc);\n    return validator(userId,\n                     factoriedDoc,\n                     fields,\n                     mutator);\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n  // Any allow returns true means proceed. Throw error if they all fail.\n  if (self._validators.updateAsync.allow.every((validator) => {\n    const factoriedDoc = transformDoc(validator, doc);\n    return !validator(userId,\n                      factoriedDoc,\n                      fields,\n                      mutator);\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n\n  options._forbidReplace = true;\n\n  // Back when we supported arbitrary client-provided selectors, we actually\n  // rewrote the selector to include an _id clause before passing to Mongo to\n  // avoid races, but since selector is guaranteed to already just be an ID, we\n  // don't have to any more.\n\n  return self._collection.updateAsync.call(\n    self._collection, selector, mutator, options);\n};\n\nCollectionPrototype._validatedUpdate = function(\n    userId, selector, mutator, options) {\n  const self = this;\n\n  check(mutator, Object);\n\n  options = Object.assign(Object.create(null), options);\n\n  if (!LocalCollection._selectorIsIdPerhapsAsObject(selector))\n    throw new Error(\"validated update should be of a single ID\");\n\n  // We don't support upserts because they don't fit nicely into allow/deny\n  // rules.\n  if (options.upsert)\n    throw new Meteor.Error(403, \"Access denied. Upserts not \" +\n                           \"allowed in a restricted collection.\");\n\n  const noReplaceError = \"Access denied. In a restricted collection you can only\" +\n        \" update documents, not replace them. Use a Mongo update operator, such \" +\n        \"as '$set'.\";\n\n  const mutatorKeys = Object.keys(mutator);\n\n  // compute modified fields\n  const modifiedFields = {};\n\n  if (mutatorKeys.length === 0) {\n    throw new Meteor.Error(403, noReplaceError);\n  }\n  mutatorKeys.forEach((op) => {\n    const params = mutator[op];\n    if (op.charAt(0) !== '$') {\n      throw new Meteor.Error(403, noReplaceError);\n    } else if (!hasOwn.call(ALLOWED_UPDATE_OPERATIONS, op)) {\n      throw new Meteor.Error(\n        403, \"Access denied. Operator \" + op + \" not allowed in a restricted collection.\");\n    } else {\n      Object.keys(params).forEach((field) => {\n        // treat dotted fields as if they are replacing their\n        // top-level part\n        if (field.indexOf('.') !== -1)\n          field = field.substring(0, field.indexOf('.'));\n\n        // record the field we are trying to change\n        modifiedFields[field] = true;\n      });\n    }\n  });\n\n  const fields = Object.keys(modifiedFields);\n\n  const findOptions = {transform: null};\n  if (!self._validators.fetchAllFields) {\n    findOptions.fields = {};\n    self._validators.fetch.forEach((fieldName) => {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n\n  const doc = self._collection.findOne(selector, findOptions);\n  if (!doc)  // none satisfied!\n    return 0;\n\n  // call user validators.\n  // Any deny returns true means denied.\n  if (self._validators.update.deny.some((validator) => {\n    const factoriedDoc = transformDoc(validator, doc);\n    return validator(userId,\n                     factoriedDoc,\n                     fields,\n                     mutator);\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n  // Any allow returns true means proceed. Throw error if they all fail.\n  if (self._validators.update.allow.every((validator) => {\n    const factoriedDoc = transformDoc(validator, doc);\n    return !validator(userId,\n                      factoriedDoc,\n                      fields,\n                      mutator);\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n\n  options._forbidReplace = true;\n\n  // Back when we supported arbitrary client-provided selectors, we actually\n  // rewrote the selector to include an _id clause before passing to Mongo to\n  // avoid races, but since selector is guaranteed to already just be an ID, we\n  // don't have to any more.\n\n  return self._collection.update.call(\n    self._collection, selector, mutator, options);\n};\n\n// Only allow these operations in validated updates. Specifically\n// whitelist operations, rather than blacklist, so new complex\n// operations that are added aren't automatically allowed. A complex\n// operation is one that does more than just modify its target\n// field. For now this contains all update operations except '$rename'.\n// http://docs.mongodb.org/manual/reference/operators/#update\nconst ALLOWED_UPDATE_OPERATIONS = {\n  $inc:1, $set:1, $unset:1, $addToSet:1, $pop:1, $pullAll:1, $pull:1,\n  $pushAll:1, $push:1, $bit:1\n};\n\n// Simulate a mongo `remove` operation while validating access control\n// rules. See #ValidatedChange\nCollectionPrototype._validatedRemoveAsync = async function(userId, selector) {\n  const self = this;\n\n  const findOptions = {transform: null};\n  if (!self._validators.fetchAllFields) {\n    findOptions.fields = {};\n    self._validators.fetch.forEach((fieldName) => {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n\n  const doc = await self._collection.findOneAsync(selector, findOptions);\n  if (!doc)\n    return 0;\n\n  // call user validators.\n  // Any deny returns true means denied.\n  if (self._validators.removeAsync.deny.some((validator) => {\n    return validator(userId, transformDoc(validator, doc));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n  // Any allow returns true means proceed. Throw error if they all fail.\n  if (self._validators.removeAsync.allow.every((validator) => {\n    return !validator(userId, transformDoc(validator, doc));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n\n  // Back when we supported arbitrary client-provided selectors, we actually\n  // rewrote the selector to {_id: {$in: [ids that we found]}} before passing to\n  // Mongo to avoid races, but since selector is guaranteed to already just be\n  // an ID, we don't have to any more.\n\n  return self._collection.removeAsync.call(self._collection, selector);\n};\n\nCollectionPrototype._validatedRemove = function(userId, selector) {\n  const self = this;\n\n  const findOptions = {transform: null};\n  if (!self._validators.fetchAllFields) {\n    findOptions.fields = {};\n    self._validators.fetch.forEach((fieldName) => {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n\n  const doc = self._collection.findOne(selector, findOptions);\n  if (!doc)\n    return 0;\n\n  // call user validators.\n  // Any deny returns true means denied.\n  if (self._validators.remove.deny.some((validator) => {\n    return validator(userId, transformDoc(validator, doc));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n  // Any allow returns true means proceed. Throw error if they all fail.\n  if (self._validators.remove.allow.every((validator) => {\n    return !validator(userId, transformDoc(validator, doc));\n  })) {\n    throw new Meteor.Error(403, \"Access denied\");\n  }\n\n  // Back when we supported arbitrary client-provided selectors, we actually\n  // rewrote the selector to {_id: {$in: [ids that we found]}} before passing to\n  // Mongo to avoid races, but since selector is guaranteed to already just be\n  // an ID, we don't have to any more.\n\n  return self._collection.remove.call(self._collection, selector);\n};\n\nCollectionPrototype._callMutatorMethodAsync = async function _callMutatorMethodAsync(name, args, options = {}) {\n\n  // For two out of three mutator methods, the first argument is a selector\n  const firstArgIsSelector = name === \"updateAsync\" || name === \"removeAsync\";\n  if (firstArgIsSelector && !alreadyInSimulation()) {\n    // If we're about to actually send an RPC, we should throw an error if\n    // this is a non-ID selector, because the mutation methods only allow\n    // single-ID selectors. (If we don't throw here, we'll see flicker.)\n    throwIfSelectorIsNotId(args[0], name);\n  }\n\n  const mutatorMethodName = this._prefix + name;\n  return this._connection.applyAsync(mutatorMethodName, args, {\n    returnStubValue: true,\n    returnServerResultPromise: true,\n    ...options,\n  });\n}\n\nCollectionPrototype._callMutatorMethod = function _callMutatorMethod(name, args, callback) {\n  if (Meteor.isClient && !callback && !alreadyInSimulation()) {\n    // Client can't block, so it can't report errors by exception,\n    // only by callback. If they forget the callback, give them a\n    // default one that logs the error, so they aren't totally\n    // baffled if their writes don't work because their database is\n    // down.\n    // Don't give a default callback in simulation, because inside stubs we\n    // want to return the results from the local collection immediately and\n    // not force a callback.\n    callback = function (err) {\n      if (err)\n        Meteor._debug(name + \" failed\", err);\n    };\n  }\n\n  // For two out of three mutator methods, the first argument is a selector\n  const firstArgIsSelector = name === \"update\" || name === \"remove\";\n  if (firstArgIsSelector && !alreadyInSimulation()) {\n    // If we're about to actually send an RPC, we should throw an error if\n    // this is a non-ID selector, because the mutation methods only allow\n    // single-ID selectors. (If we don't throw here, we'll see flicker.)\n    throwIfSelectorIsNotId(args[0], name);\n  }\n\n  const mutatorMethodName = this._prefix + name;\n  return this._connection.apply(\n    mutatorMethodName, args, { returnStubValue: true }, callback);\n}\n\nfunction transformDoc(validator, doc) {\n  if (validator.transform)\n    return validator.transform(doc);\n  return doc;\n}\n\nfunction docToValidate(validator, doc, generatedId) {\n  let ret = doc;\n  if (validator.transform) {\n    ret = EJSON.clone(doc);\n    // If you set a server-side transform on your collection, then you don't get\n    // to tell the difference between \"client specified the ID\" and \"server\n    // generated the ID\", because transforms expect to get _id.  If you want to\n    // do that check, you can do it with a specific\n    // `C.allow({insertAsync: f, transform: null})` validator.\n    if (generatedId !== null) {\n      ret._id = generatedId;\n    }\n    ret = validator.transform(ret);\n  }\n  return ret;\n}\n\nfunction addValidator(collection, allowOrDeny, options) {\n  // validate keys\n  const validKeysRegEx = /^(?:insertAsync|updateAsync|removeAsync|insert|update|remove|fetch|transform)$/;\n  Object.keys(options).forEach((key) => {\n    if (!validKeysRegEx.test(key))\n      throw new Error(allowOrDeny + \": Invalid key: \" + key);\n  });\n\n  collection._restricted = true;\n\n  [\n    'insertAsync',\n    'updateAsync',\n    'removeAsync',\n    'insert',\n    'update',\n    'remove',\n  ].forEach(name => {\n    if (hasOwn.call(options, name)) {\n      if (!(options[name] instanceof Function)) {\n        throw new Error(\n          allowOrDeny + ': Value for `' + name + '` must be a function'\n        );\n      }\n\n      // If the transform is specified at all (including as 'null') in this\n      // call, then take that; otherwise, take the transform from the\n      // collection.\n      if (options.transform === undefined) {\n        options[name].transform = collection._transform; // already wrapped\n      } else {\n        options[name].transform = LocalCollection.wrapTransform(\n          options.transform\n        );\n      }\n      collection._validators[name][allowOrDeny].push(options[name]);\n    }\n  });\n\n  // Only updateAsync the fetch fields if we're passed things that affect\n  // fetching. This way allow({}) and allow({insertAsync: f}) don't result in\n  // setting fetchAllFields\n  if (options.updateAsync || options.removeAsync || options.fetch) {\n    if (options.fetch && !(options.fetch instanceof Array)) {\n      throw new Error(allowOrDeny + \": Value for `fetch` must be an array\");\n    }\n    collection._updateFetch(options.fetch);\n  }\n}\n\nfunction throwIfSelectorIsNotId(selector, methodName) {\n  if (!LocalCollection._selectorIsIdPerhapsAsObject(selector)) {\n    throw new Meteor.Error(\n      403, \"Not permitted. Untrusted code may only \" + methodName +\n        \" documents by ID.\");\n  }\n};\n\n// Determine if we are in a DDP method simulation\nfunction alreadyInSimulation() {\n  var CurrentInvocation =\n    DDP._CurrentMethodInvocation ||\n    // For backwards compatibility, as explained in this issue:\n    // https://github.com/meteor/meteor/issues/8947\n    DDP._CurrentInvocation;\n\n  const enclosing = CurrentInvocation.get();\n  return enclosing && enclosing.isSimulation;\n}\n"]}